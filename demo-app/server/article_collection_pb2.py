# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: article_collection.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='article_collection.proto',
  package='tutorial',
  syntax='proto3',
  serialized_pb=_b('\n\x18\x61rticle_collection.proto\x12\x08tutorial\"\xb3\x02\n\x07\x41rticle\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05title\x18\x03 \x01(\t\x12\x0f\n\x07snippet\x18\x04 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x05 \x01(\t\x12\x12\n\nisFeatured\x18\x06 \x01(\x08\x12(\n\x06\x61uthor\x18\x07 \x01(\x0b\x32\x18.tutorial.Article.Author\x12\'\n\x06topics\x18\x08 \x03(\x0e\x32\x17.tutorial.Article.Topic\x1a\x31\n\x06\x41uthor\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\"Q\n\x05Topic\x12\x0b\n\x07SCIENCE\x10\x00\x12\x0e\n\nTECHNOLOGY\x10\x01\x12\n\n\x06NATURE\x10\x02\x12\x11\n\rENTERTAINMENT\x10\x03\x12\x0c\n\x08POLITICS\x10\x04\"8\n\x11\x41rticleCollection\x12#\n\x08\x61rticles\x18\x01 \x03(\x0b\x32\x11.tutorial.Articleb\x06proto3')
)



_ARTICLE_TOPIC = _descriptor.EnumDescriptor(
  name='Topic',
  full_name='tutorial.Article.Topic',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SCIENCE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TECHNOLOGY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NATURE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTERTAINMENT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POLITICS', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=265,
  serialized_end=346,
)
_sym_db.RegisterEnumDescriptor(_ARTICLE_TOPIC)


_ARTICLE_AUTHOR = _descriptor.Descriptor(
  name='Author',
  full_name='tutorial.Article.Author',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='tutorial.Article.Author.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='tutorial.Article.Author.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='tutorial.Article.Author.email', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=214,
  serialized_end=263,
)

_ARTICLE = _descriptor.Descriptor(
  name='Article',
  full_name='tutorial.Article',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='tutorial.Article.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='title', full_name='tutorial.Article.title', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='snippet', full_name='tutorial.Article.snippet', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content', full_name='tutorial.Article.content', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='isFeatured', full_name='tutorial.Article.isFeatured', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='author', full_name='tutorial.Article.author', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topics', full_name='tutorial.Article.topics', index=6,
      number=8, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ARTICLE_AUTHOR, ],
  enum_types=[
    _ARTICLE_TOPIC,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=346,
)


_ARTICLECOLLECTION = _descriptor.Descriptor(
  name='ArticleCollection',
  full_name='tutorial.ArticleCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='articles', full_name='tutorial.ArticleCollection.articles', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=348,
  serialized_end=404,
)

_ARTICLE_AUTHOR.containing_type = _ARTICLE
_ARTICLE.fields_by_name['author'].message_type = _ARTICLE_AUTHOR
_ARTICLE.fields_by_name['topics'].enum_type = _ARTICLE_TOPIC
_ARTICLE_TOPIC.containing_type = _ARTICLE
_ARTICLECOLLECTION.fields_by_name['articles'].message_type = _ARTICLE
DESCRIPTOR.message_types_by_name['Article'] = _ARTICLE
DESCRIPTOR.message_types_by_name['ArticleCollection'] = _ARTICLECOLLECTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Article = _reflection.GeneratedProtocolMessageType('Article', (_message.Message,), dict(

  Author = _reflection.GeneratedProtocolMessageType('Author', (_message.Message,), dict(
    DESCRIPTOR = _ARTICLE_AUTHOR,
    __module__ = 'article_collection_pb2'
    # @@protoc_insertion_point(class_scope:tutorial.Article.Author)
    ))
  ,
  DESCRIPTOR = _ARTICLE,
  __module__ = 'article_collection_pb2'
  # @@protoc_insertion_point(class_scope:tutorial.Article)
  ))
_sym_db.RegisterMessage(Article)
_sym_db.RegisterMessage(Article.Author)

ArticleCollection = _reflection.GeneratedProtocolMessageType('ArticleCollection', (_message.Message,), dict(
  DESCRIPTOR = _ARTICLECOLLECTION,
  __module__ = 'article_collection_pb2'
  # @@protoc_insertion_point(class_scope:tutorial.ArticleCollection)
  ))
_sym_db.RegisterMessage(ArticleCollection)


# @@protoc_insertion_point(module_scope)
