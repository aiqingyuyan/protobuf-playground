// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: article_collection.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "article_collection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tutorial {
class Article_AuthorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Article_Author>
     _instance;
} _Article_Author_default_instance_;
class ArticleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Article>
     _instance;
} _Article_default_instance_;
class ArticleCollectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ArticleCollection>
     _instance;
} _ArticleCollection_default_instance_;

namespace protobuf_article_5fcollection_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article_Author, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article_Author, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article_Author, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article_Author, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, snippet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, isfeatured_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Article, topic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArticleCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArticleCollection, article_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Article_Author)},
  { 8, -1, sizeof(Article)},
  { 20, -1, sizeof(ArticleCollection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Article_Author_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Article_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ArticleCollection_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "article_collection.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Article_Author_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Article_Author_default_instance_);_Article_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Article_default_instance_);_ArticleCollection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ArticleCollection_default_instance_);_Article_default_instance_._instance.get_mutable()->author_ = const_cast< ::tutorial::Article_Author*>(
      ::tutorial::Article_Author::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030article_collection.proto\022\010tutorial\"\262\002\n"
      "\007Article\022\n\n\002id\030\001 \001(\005\022\r\n\005title\030\003 \001(\t\022\017\n\007s"
      "nippet\030\004 \001(\t\022\017\n\007content\030\005 \001(\t\022\022\n\nisFeatu"
      "red\030\006 \001(\010\022(\n\006author\030\007 \001(\0132\030.tutorial.Art"
      "icle.Author\022&\n\005topic\030\010 \003(\0162\027.tutorial.Ar"
      "ticle.Topic\0321\n\006Author\022\n\n\002id\030\001 \001(\005\022\014\n\004nam"
      "e\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\"Q\n\005Topic\022\013\n\007SCIEN"
      "CE\020\000\022\016\n\nTECHNOLOGY\020\001\022\n\n\006NATURE\020\002\022\021\n\rENTE"
      "RTAINMENT\020\003\022\014\n\010POLITICS\020\004\"7\n\021ArticleColl"
      "ection\022\"\n\007article\030\001 \003(\0132\021.tutorial.Artic"
      "leb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 410);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "article_collection.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_article_5fcollection_2eproto

const ::google::protobuf::EnumDescriptor* Article_Topic_descriptor() {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_enum_descriptors[0];
}
bool Article_Topic_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Article_Topic Article::SCIENCE;
const Article_Topic Article::TECHNOLOGY;
const Article_Topic Article::NATURE;
const Article_Topic Article::ENTERTAINMENT;
const Article_Topic Article::POLITICS;
const Article_Topic Article::Topic_MIN;
const Article_Topic Article::Topic_MAX;
const int Article::Topic_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Article_Author::kIdFieldNumber;
const int Article_Author::kNameFieldNumber;
const int Article_Author::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Article_Author::Article_Author()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_article_5fcollection_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.Article.Author)
}
Article_Author::Article_Author(const Article_Author& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tutorial.Article.Author)
}

void Article_Author::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

Article_Author::~Article_Author() {
  // @@protoc_insertion_point(destructor:tutorial.Article.Author)
  SharedDtor();
}

void Article_Author::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Article_Author::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Article_Author::descriptor() {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Article_Author& Article_Author::default_instance() {
  protobuf_article_5fcollection_2eproto::InitDefaults();
  return *internal_default_instance();
}

Article_Author* Article_Author::New(::google::protobuf::Arena* arena) const {
  Article_Author* n = new Article_Author;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Article_Author::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.Article.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Article_Author::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.Article.Author)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.Article.Author.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.Article.Author.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.Article.Author)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.Article.Author)
  return false;
#undef DO_
}

void Article_Author::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.Article.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.Author.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.Author.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.Article.Author)
}

::google::protobuf::uint8* Article_Author::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.Article.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.Author.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.Author.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.Article.Author)
  return target;
}

size_t Article_Author::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.Article.Author)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Article_Author::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.Article.Author)
  GOOGLE_DCHECK_NE(&from, this);
  const Article_Author* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Article_Author>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.Article.Author)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.Article.Author)
    MergeFrom(*source);
  }
}

void Article_Author::MergeFrom(const Article_Author& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.Article.Author)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Article_Author::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.Article.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Article_Author::CopyFrom(const Article_Author& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.Article.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Article_Author::IsInitialized() const {
  return true;
}

void Article_Author::Swap(Article_Author* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Article_Author::InternalSwap(Article_Author* other) {
  using std::swap;
  name_.Swap(&other->name_);
  email_.Swap(&other->email_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Article_Author::GetMetadata() const {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Article_Author

// int32 id = 1;
void Article_Author::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Article_Author::id() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.Author.id)
  return id_;
}
void Article_Author::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Article.Author.id)
}

// string name = 2;
void Article_Author::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Article_Author::name() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.Author.name)
  return name_.GetNoArena();
}
void Article_Author::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Article.Author.name)
}
#if LANG_CXX11
void Article_Author::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.Article.Author.name)
}
#endif
void Article_Author::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Article.Author.name)
}
void Article_Author::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Article.Author.name)
}
::std::string* Article_Author::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.Article.Author.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Article_Author::release_name() {
  // @@protoc_insertion_point(field_release:tutorial.Article.Author.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Article_Author::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.Author.name)
}

// string email = 3;
void Article_Author::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Article_Author::email() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.Author.email)
  return email_.GetNoArena();
}
void Article_Author::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Article.Author.email)
}
#if LANG_CXX11
void Article_Author::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.Article.Author.email)
}
#endif
void Article_Author::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Article.Author.email)
}
void Article_Author::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Article.Author.email)
}
::std::string* Article_Author::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.Article.Author.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Article_Author::release_email() {
  // @@protoc_insertion_point(field_release:tutorial.Article.Author.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Article_Author::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.Author.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Article::kIdFieldNumber;
const int Article::kTitleFieldNumber;
const int Article::kSnippetFieldNumber;
const int Article::kContentFieldNumber;
const int Article::kIsFeaturedFieldNumber;
const int Article::kAuthorFieldNumber;
const int Article::kTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Article::Article()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_article_5fcollection_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.Article)
}
Article::Article(const Article& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      topic_(from.topic_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.snippet().size() > 0) {
    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_author()) {
    author_ = new ::tutorial::Article_Author(*from.author_);
  } else {
    author_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&isfeatured_) -
    reinterpret_cast<char*>(&id_)) + sizeof(isfeatured_));
  // @@protoc_insertion_point(copy_constructor:tutorial.Article)
}

void Article::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&author_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfeatured_) -
      reinterpret_cast<char*>(&author_)) + sizeof(isfeatured_));
  _cached_size_ = 0;
}

Article::~Article() {
  // @@protoc_insertion_point(destructor:tutorial.Article)
  SharedDtor();
}

void Article::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete author_;
}

void Article::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Article::descriptor() {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Article& Article::default_instance() {
  protobuf_article_5fcollection_2eproto::InitDefaults();
  return *internal_default_instance();
}

Article* Article::New(::google::protobuf::Arena* arena) const {
  Article* n = new Article;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Article::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.Clear();
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && author_ != NULL) {
    delete author_;
  }
  author_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfeatured_) -
      reinterpret_cast<char*>(&id_)) + sizeof(isfeatured_));
  _internal_metadata_.Clear();
}

bool Article::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.Article)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.Article.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string snippet = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snippet()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snippet().data(), static_cast<int>(this->snippet().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.Article.snippet"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.Article.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isFeatured = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfeatured_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tutorial.Article.Author author = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_author()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tutorial.Article.Topic topic = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_topic(static_cast< ::tutorial::Article_Topic >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_topic(static_cast< ::tutorial::Article_Topic >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.Article)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.Article)
  return false;
#undef DO_
}

void Article::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // string snippet = 4;
  if (this->snippet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.snippet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->snippet(), output);
  }

  // string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // bool isFeatured = 6;
  if (this->isfeatured() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isfeatured(), output);
  }

  // .tutorial.Article.Author author = 7;
  if (this->has_author()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->author_, output);
  }

  // repeated .tutorial.Article.Topic topic = 8;
  if (this->topic_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_topic_cached_byte_size_));
  }
  for (int i = 0, n = this->topic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->topic(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.Article)
}

::google::protobuf::uint8* Article::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.Article)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // string snippet = 4;
  if (this->snippet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippet().data(), static_cast<int>(this->snippet().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.snippet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->snippet(), target);
  }

  // string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.Article.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // bool isFeatured = 6;
  if (this->isfeatured() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isfeatured(), target);
  }

  // .tutorial.Article.Author author = 7;
  if (this->has_author()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->author_, deterministic, target);
  }

  // repeated .tutorial.Article.Topic topic = 8;
  if (this->topic_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _topic_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->topic_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.Article)
  return target;
}

size_t Article::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.Article)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tutorial.Article.Topic topic = 8;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->topic_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->topic(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _topic_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string snippet = 4;
  if (this->snippet().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snippet());
  }

  // string content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // .tutorial.Article.Author author = 7;
  if (this->has_author()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->author_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool isFeatured = 6;
  if (this->isfeatured() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Article::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.Article)
  GOOGLE_DCHECK_NE(&from, this);
  const Article* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Article>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.Article)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.Article)
    MergeFrom(*source);
  }
}

void Article::MergeFrom(const Article& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.Article)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topic_.MergeFrom(from.topic_);
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.snippet().size() > 0) {

    snippet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippet_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_author()) {
    mutable_author()->::tutorial::Article_Author::MergeFrom(from.author());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.isfeatured() != 0) {
    set_isfeatured(from.isfeatured());
  }
}

void Article::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.Article)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Article::CopyFrom(const Article& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.Article)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Article::IsInitialized() const {
  return true;
}

void Article::Swap(Article* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Article::InternalSwap(Article* other) {
  using std::swap;
  topic_.InternalSwap(&other->topic_);
  title_.Swap(&other->title_);
  snippet_.Swap(&other->snippet_);
  content_.Swap(&other->content_);
  swap(author_, other->author_);
  swap(id_, other->id_);
  swap(isfeatured_, other->isfeatured_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Article::GetMetadata() const {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Article

// int32 id = 1;
void Article::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Article::id() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.id)
  return id_;
}
void Article::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Article.id)
}

// string title = 3;
void Article::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Article::title() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.title)
  return title_.GetNoArena();
}
void Article::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Article.title)
}
#if LANG_CXX11
void Article::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.Article.title)
}
#endif
void Article::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Article.title)
}
void Article::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Article.title)
}
::std::string* Article::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.Article.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Article::release_title() {
  // @@protoc_insertion_point(field_release:tutorial.Article.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Article::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.title)
}

// string snippet = 4;
void Article::clear_snippet() {
  snippet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Article::snippet() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.snippet)
  return snippet_.GetNoArena();
}
void Article::set_snippet(const ::std::string& value) {
  
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Article.snippet)
}
#if LANG_CXX11
void Article::set_snippet(::std::string&& value) {
  
  snippet_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.Article.snippet)
}
#endif
void Article::set_snippet(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Article.snippet)
}
void Article::set_snippet(const char* value, size_t size) {
  
  snippet_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Article.snippet)
}
::std::string* Article::mutable_snippet() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.Article.snippet)
  return snippet_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Article::release_snippet() {
  // @@protoc_insertion_point(field_release:tutorial.Article.snippet)
  
  return snippet_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Article::set_allocated_snippet(::std::string* snippet) {
  if (snippet != NULL) {
    
  } else {
    
  }
  snippet_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippet);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.snippet)
}

// string content = 5;
void Article::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Article::content() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.content)
  return content_.GetNoArena();
}
void Article::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Article.content)
}
#if LANG_CXX11
void Article::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.Article.content)
}
#endif
void Article::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Article.content)
}
void Article::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Article.content)
}
::std::string* Article::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.Article.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Article::release_content() {
  // @@protoc_insertion_point(field_release:tutorial.Article.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Article::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.content)
}

// bool isFeatured = 6;
void Article::clear_isfeatured() {
  isfeatured_ = false;
}
bool Article::isfeatured() const {
  // @@protoc_insertion_point(field_get:tutorial.Article.isFeatured)
  return isfeatured_;
}
void Article::set_isfeatured(bool value) {
  
  isfeatured_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Article.isFeatured)
}

// .tutorial.Article.Author author = 7;
bool Article::has_author() const {
  return this != internal_default_instance() && author_ != NULL;
}
void Article::clear_author() {
  if (GetArenaNoVirtual() == NULL && author_ != NULL) delete author_;
  author_ = NULL;
}
const ::tutorial::Article_Author& Article::author() const {
  const ::tutorial::Article_Author* p = author_;
  // @@protoc_insertion_point(field_get:tutorial.Article.author)
  return p != NULL ? *p : *reinterpret_cast<const ::tutorial::Article_Author*>(
      &::tutorial::_Article_Author_default_instance_);
}
::tutorial::Article_Author* Article::mutable_author() {
  
  if (author_ == NULL) {
    author_ = new ::tutorial::Article_Author;
  }
  // @@protoc_insertion_point(field_mutable:tutorial.Article.author)
  return author_;
}
::tutorial::Article_Author* Article::release_author() {
  // @@protoc_insertion_point(field_release:tutorial.Article.author)
  
  ::tutorial::Article_Author* temp = author_;
  author_ = NULL;
  return temp;
}
void Article::set_allocated_author(::tutorial::Article_Author* author) {
  delete author_;
  author_ = author;
  if (author) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tutorial.Article.author)
}

// repeated .tutorial.Article.Topic topic = 8;
int Article::topic_size() const {
  return topic_.size();
}
void Article::clear_topic() {
  topic_.Clear();
}
::tutorial::Article_Topic Article::topic(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.Article.topic)
  return static_cast< ::tutorial::Article_Topic >(topic_.Get(index));
}
void Article::set_topic(int index, ::tutorial::Article_Topic value) {
  topic_.Set(index, value);
  // @@protoc_insertion_point(field_set:tutorial.Article.topic)
}
void Article::add_topic(::tutorial::Article_Topic value) {
  topic_.Add(value);
  // @@protoc_insertion_point(field_add:tutorial.Article.topic)
}
const ::google::protobuf::RepeatedField<int>&
Article::topic() const {
  // @@protoc_insertion_point(field_list:tutorial.Article.topic)
  return topic_;
}
::google::protobuf::RepeatedField<int>*
Article::mutable_topic() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.Article.topic)
  return &topic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArticleCollection::kArticleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArticleCollection::ArticleCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_article_5fcollection_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.ArticleCollection)
}
ArticleCollection::ArticleCollection(const ArticleCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      article_(from.article_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tutorial.ArticleCollection)
}

void ArticleCollection::SharedCtor() {
  _cached_size_ = 0;
}

ArticleCollection::~ArticleCollection() {
  // @@protoc_insertion_point(destructor:tutorial.ArticleCollection)
  SharedDtor();
}

void ArticleCollection::SharedDtor() {
}

void ArticleCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArticleCollection::descriptor() {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArticleCollection& ArticleCollection::default_instance() {
  protobuf_article_5fcollection_2eproto::InitDefaults();
  return *internal_default_instance();
}

ArticleCollection* ArticleCollection::New(::google::protobuf::Arena* arena) const {
  ArticleCollection* n = new ArticleCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArticleCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.ArticleCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  article_.Clear();
  _internal_metadata_.Clear();
}

bool ArticleCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.ArticleCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tutorial.Article article = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_article()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.ArticleCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.ArticleCollection)
  return false;
#undef DO_
}

void ArticleCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.ArticleCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tutorial.Article article = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->article(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.ArticleCollection)
}

::google::protobuf::uint8* ArticleCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.ArticleCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tutorial.Article article = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->article_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->article(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.ArticleCollection)
  return target;
}

size_t ArticleCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.ArticleCollection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tutorial.Article article = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->article_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->article(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArticleCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.ArticleCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const ArticleCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArticleCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.ArticleCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.ArticleCollection)
    MergeFrom(*source);
  }
}

void ArticleCollection::MergeFrom(const ArticleCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.ArticleCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  article_.MergeFrom(from.article_);
}

void ArticleCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.ArticleCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArticleCollection::CopyFrom(const ArticleCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.ArticleCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArticleCollection::IsInitialized() const {
  return true;
}

void ArticleCollection::Swap(ArticleCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArticleCollection::InternalSwap(ArticleCollection* other) {
  using std::swap;
  article_.InternalSwap(&other->article_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArticleCollection::GetMetadata() const {
  protobuf_article_5fcollection_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_article_5fcollection_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArticleCollection

// repeated .tutorial.Article article = 1;
int ArticleCollection::article_size() const {
  return article_.size();
}
void ArticleCollection::clear_article() {
  article_.Clear();
}
const ::tutorial::Article& ArticleCollection::article(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.ArticleCollection.article)
  return article_.Get(index);
}
::tutorial::Article* ArticleCollection::mutable_article(int index) {
  // @@protoc_insertion_point(field_mutable:tutorial.ArticleCollection.article)
  return article_.Mutable(index);
}
::tutorial::Article* ArticleCollection::add_article() {
  // @@protoc_insertion_point(field_add:tutorial.ArticleCollection.article)
  return article_.Add();
}
::google::protobuf::RepeatedPtrField< ::tutorial::Article >*
ArticleCollection::mutable_article() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.ArticleCollection.article)
  return &article_;
}
const ::google::protobuf::RepeatedPtrField< ::tutorial::Article >&
ArticleCollection::article() const {
  // @@protoc_insertion_point(field_list:tutorial.ArticleCollection.article)
  return article_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
